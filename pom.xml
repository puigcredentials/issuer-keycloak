<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>es.puig.keycloak</groupId>
    <artifactId>issuer-keycloak</artifactId>
    <version>1.1.0</version>
    <packaging>jar</packaging>

    <name>Pre-Authorized Code Keycloak Plugin</name>
    <description>Keycloak plugin for support of the Pre-Authorized code flow for issuing of verifiable credentials</description>
    <inceptionYear>2023</inceptionYear>
    <licenses>
        <license>
            <name>Apache License 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0</url>
        </license>
    </licenses>

    <properties>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- project info -->
        <project.description>Authorization VC-Issuer is an extension to keycloak, that allows the custom
            OAUTH 2.0 for users in a VC flow.
        </project.description>
        <project.summary>Keycloak plugin Authorization Verifiable Credentials.</project.summary>
        <project.license.name>GNU Affero General Public License v3.0</project.license.name>
        <project.license.identifier>Apache License 2.0</project.license.identifier>
        <project.license.url>https://www.apache.org/licenses/LICENSE-2.0</project.license.url>

        <!-- frontend build -->
        <version.com.github.eirslett.frontend-maven-plugin>1.12.1</version.com.github.eirslett.frontend-maven-plugin>
        <version.frontend.node>v18.9.0</version.frontend.node>
        <version.org.apache.maven.plugins.maven-clean-plugin>3.2.0</version.org.apache.maven.plugins.maven-clean-plugin>

        <!-- lazy dev -->
        <version.org.projectlombok>1.18.24</version.org.projectlombok>
        <version.org.openapitools.generator-maven-plugin>6.3.0</version.org.openapitools.generator-maven-plugin>
        <version.io.swagger.swagger-annotations>1.6.9</version.io.swagger.swagger-annotations>

        <!-- keycloak -->
        <version.org.keycloak.libs>24.0.1</version.org.keycloak.libs>
        <!-- version to be used for tests - can be different from the libs -->
        <keycloak.version>24.0.1</keycloak.version>
        <keycloak.image>quay.io/keycloak/keycloak:${keycloak.version}</keycloak.image>
        <version.org.eclipse.jkube.kubernetes-maven-plugin>1.10.1</version.org.eclipse.jkube.kubernetes-maven-plugin>
        <version.org.keycloak.keycloak-admin-client>${keycloak.version}</version.org.keycloak.keycloak-admin-client>

        <!-- test -->
        <version.io.fabric8.maven-plugin>4.4.2</version.io.fabric8.maven-plugin>
        <version.io.kokuwa.maven.k3s-plugin>0.6.2</version.io.kokuwa.maven.k3s-plugin>
        <version.org.junit.jupiter>5.9.2</version.org.junit.jupiter>
        <version.org.mockito.mockito-all>1.10.19</version.org.mockito.mockito-all>
        <version.org.mockito.mockito-junit-jupiter>5.0.0</version.org.mockito.mockito-junit-jupiter>
        <version.org.awaitility>4.2.0</version.org.awaitility>
        <coveralls.token>myToken</coveralls.token>
        <version.org.eluder.coveralls.maven-plugin>2.2.0</version.org.eluder.coveralls.maven-plugin>
        <version.com.github.spotbugs.maven-plugin>4.5.2.0</version.com.github.spotbugs.maven-plugin>
        <version.org.apache.maven.plugins.maven-site-plugin>3.9.1</version.org.apache.maven.plugins.maven-site-plugin>
        <version.org.jacoco.maven-plugin>0.8.7</version.org.jacoco.maven-plugin>
        <jacoco.reportFolder>${project.build.directory}/site/jacoco</jacoco.reportFolder>
        <jacoco.utReportFile>${jacoco.reportFolder}/test.exec</jacoco.utReportFile>
        <spotbugs.reportFolder>${project.build.directory}/site/spotbugs</spotbugs.reportFolder>
        <!-- sonar -->
        <sonar.projectName>issuer-keycloak</sonar.projectName>
        <sonar.projectKey>puigcredentials_issuer-keycloak</sonar.projectKey>
        <sonar.organization>puigcredentials</sonar.organization>
        <sonar.host.url>https://sonarcloud.io</sonar.host.url>
    </properties>

    <dependencies>
        <!-- CACHE -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>31.0.1-android</version>
        </dependency>
        <dependency>
            <groupId>org.infinispan</groupId>
            <artifactId>infinispan-core</artifactId>
            <version>15.0.2.Final</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>jakarta.enterprise.cdi-api</artifactId>
            <version>4.0.1</version>
        </dependency>

        <!-- lazy dev -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${version.org.projectlombok}</version>
        </dependency>

        <dependency>
            <groupId>com.google.auto.service</groupId>
            <artifactId>auto-service</artifactId>
            <version>1.0.1</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.keycloak</groupId>
            <artifactId>keycloak-server-spi</artifactId>
            <version>${version.org.keycloak.libs}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.keycloak</groupId>
            <artifactId>keycloak-common</artifactId>
            <version>${version.org.keycloak.libs}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.keycloak</groupId>
            <artifactId>keycloak-core</artifactId>
            <version>${version.org.keycloak.libs}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.keycloak</groupId>
            <artifactId>keycloak-server-spi-private</artifactId>
            <version>${version.org.keycloak.libs}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.keycloak</groupId>
            <artifactId>keycloak-model-map</artifactId>
            <version>22.0.5</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.keycloak</groupId>
            <artifactId>keycloak-model-jpa</artifactId>
            <version>${version.org.keycloak.libs}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.keycloak</groupId>
            <artifactId>keycloak-services</artifactId>
            <version>${version.org.keycloak.libs}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-annotations</artifactId>
            <version>${version.io.swagger.swagger-annotations}</version>
        </dependency>

        <!-- Testing -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${version.org.junit.jupiter}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>${version.org.mockito.mockito-all}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>${version.org.mockito.mockito-junit-jupiter}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <version>${version.org.awaitility}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.keycloak</groupId>
            <artifactId>keycloak-admin-client</artifactId>
            <version>${version.org.keycloak.keycloak-admin-client}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>5.9.2</version>
        </dependency>

        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-common</artifactId>
            <version>3.1.2</version>
        </dependency>

        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp</artifactId>
            <version>4.11.0</version>
        </dependency>
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>logging-interceptor</artifactId>
            <version>4.11.0</version>
        </dependency>

        <dependency>
            <groupId>io.gsonfire</groupId>
            <artifactId>gson-fire</artifactId>
            <version>1.9.0</version>
        </dependency>

        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-client</artifactId>
            <version>4.7.6.Final</version>
        </dependency>

        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-multipart-provider</artifactId>
            <version>4.7.6.Final</version>
            <exclusions>
                <exclusion>
                    <groupId>com.sun.xml.bind</groupId>
                    <artifactId>jaxb-impl</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.sun.mail</groupId>
                    <artifactId>javax.mail</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- JSON processing: jackson -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>2.15.2</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>2.15.2</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.15.2</version>
        </dependency>
        <dependency>
            <groupId>org.openapitools</groupId>
            <artifactId>jackson-databind-nullable</artifactId>
            <version>0.2.6</version>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-jackson2-provider</artifactId>
            <version>4.7.6.Final</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <version>2.15.2</version>
        </dependency>
        <dependency>
            <groupId>com.github.joschi.jackson</groupId>
            <artifactId>jackson-datatype-threetenbp</artifactId>
            <version>2.9.10</version>
        </dependency>
        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
            <version>1.3.5</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13</version>
        </dependency>
        <!-- test dependencies -->

    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>${basedir}/src/main/resources</directory>
                <filtering>true</filtering>
                <excludes>
                    <!-- only copy the "compiled" frontend, not the src and npm...-->
                    <exclude>**/src/**</exclude>
                </excludes>
            </resource>
        </resources>
        <plugins>
            <!-- generate sources from openapi spec -->
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <version>7.4.0</version>
                <executions>
                    <execution>
                        <id>openapi</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <inputSpec>${project.basedir}/api/api.yaml</inputSpec>
                            <strictSpec>true</strictSpec>
                            <modelPackage>org.fiware.keycloak.oidcvc.model</modelPackage>
                            <generateAliasAsModel>true</generateAliasAsModel>
                            <generatorName>java</generatorName>
                            <!-- the generated interfaces cannot be used, since there class level annotations clash with the spi. -->
                            <generateApis>false</generateApis>
                            <modelNameSuffix>VO</modelNameSuffix>
                            <configOptions>
                                <interfaceOnly>true</interfaceOnly>
                                <containerDefaultToNull>true</containerDefaultToNull>
                                <returnResponse>true</returnResponse>
                                <library>resteasy</library>
                            </configOptions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- add generated sources -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.3.0</version>
                <executions>
                    <execution>
                        <id>openapi-sources</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${project.build.directory}/generated-sources/openapi</source>
                            </sources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>openapi-test-sources</id>
                        <phase>generate-test-sources</phase>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${project.build.directory}/generated-test-sources/openapi</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- copy frontend to the build dir to keep all the npm dependencies cleanable -->
            <!-- clean plugin is executed in process-resources phase, to remove the theme folder after copying the -->
            <!-- results to classes/ to improve performance of the following phases -->

            <!-- copy project dependencies -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>micronaut-lib</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeScope>runtime</includeScope>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                            <silent>true</silent>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <classpathPrefix>lib/</classpathPrefix>
                        </manifest>
                    </archive>
                </configuration>
                <version>3.3.0</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <!-- Uncomment to enable incremental compilation -->
                    <!-- annotationProcessorPaths>
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${version.org.projectlombok}</version>
                        </path>
                    </annotationProcessorPaths-->
                </configuration>
                <version>3.10.1</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M3</version>
                <configuration>
                    <argLine>@{argLine} --add-opens java.base/java.lang=ALL-UNNAMED</argLine>
                    <excludes>
                        <exclude>**/*IntegrationTest.java</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.eluder.coveralls</groupId>
                <artifactId>coveralls-maven-plugin</artifactId>
                <version>${version.org.eluder.coveralls.maven-plugin}</version>
                <configuration>
                    <repoToken>${coveralls.token}</repoToken>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${version.org.jacoco.maven-plugin}</version>
                <configuration>
                    <!-- exclude generated code -->
                    <excludes>
                        <exclude>org/fiware/keycloak/oidcvc/**/*</exclude>
                        <exclude>org/gradle/cli</exclude>
                        <exclude>org/gradle/wrapper</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <id>pre-unit-tests</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <!-- Sets the path to the file which contains the execution data. -->
                            <destFile>${jacoco.utReportFile}</destFile>
                        </configuration>
                    </execution>
                    <!-- Ensures that the code coverage report for unit tests is created after unit tests have been run -->
                    <execution>
                        <id>post-unit-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${jacoco.utReportFile}</dataFile>
                            <outputDirectory>${jacoco.reportFolder}</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>${version.com.github.spotbugs.maven-plugin}</version>
                <configuration>
                    <xmlOutput>true</xmlOutput>
                    <failOnError>false</failOnError>
                    <xmlOutputDirectory>${spotbugs.reportFolder}</xmlOutputDirectory>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>${version.org.apache.maven.plugins.maven-site-plugin}</version>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>integration-test</id>
            <build>
                <plugins>
                    <!-- only run integration tests -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </plugin>
                    <!-- run tests -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <failIfNoTests>true</failIfNoTests>
                            <includes>
                                <include>**/*IntegrationTest.java</include>
                            </includes>
                        </configuration>
                        <executions>
                            <execution>
                                <id>test</id>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>integration-test</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>verify</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.eclipse.jkube</groupId>
                        <artifactId>kubernetes-maven-plugin</artifactId>
                        <version>${version.org.eclipse.jkube.kubernetes-maven-plugin}</version>
                        <executions>
                            <execution>
                                <id>test-prep</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <images>
                                <!-- just to re-tag for the test setup -->
                                <image>
                                    <name>keycloak</name>
                                    <build>
                                        <from>${keycloak.image}</from>
                                    </build>
                                </image>
                                <image>
                                    <name>keycloak-vc-issuer</name>
                                    <build>
                                        <dockerFile>${project.build.directory}/docker-build/Dockerfile-init</dockerFile>
                                        <args>
                                            <PLUGIN_VERSION>${project.version}</PLUGIN_VERSION>
                                            <JAR_DIR>maven/</JAR_DIR>
                                        </args>
                                    </build>
                                </image>
                            </images>
                        </configuration>
                    </plugin>

                    <plugin>
                        <groupId>io.kokuwa.maven</groupId>
                        <artifactId>k3s-maven-plugin</artifactId>
                        <version>${version.io.kokuwa.maven.k3s-plugin}</version>
                        <executions>
                            <execution>
                                <id>prepare-test-cluster</id>
                                <goals>
                                    <goal>create</goal>
                                    <goal>start</goal>
                                    <goal>image</goal>
                                    <goal>kubectl</goal>
                                    <goal>rm</goal>
                                </goals>
                                <configuration>
                                    <dockerImages>
                                        <dockerImage>keycloak</dockerImage>
                                        <dockerImage>keycloak-vc-issuer</dockerImage>
                                    </dockerImages>
                                    <streamLogs>true</streamLogs>
                                    <portBindings>
                                        <portBinding>8080:8080</portBinding>
                                        <portBinding>7000:7000</portBinding>
                                        <portBinding>7001:7001</portBinding>
                                        <portBinding>7003:7003</portBinding>
                                    </portBindings>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>dev</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.eclipse.jkube</groupId>
                        <artifactId>kubernetes-maven-plugin</artifactId>
                        <version>${version.org.eclipse.jkube.kubernetes-maven-plugin}</version>
                        <executions>
                            <execution>
                                <id>test-prep</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>

                            <images>
                                <!-- just to re-tag for the test setup -->
                                <image>
                                    <name>keycloak</name>
                                    <build>
                                        <from>${keycloak.image}</from>
                                    </build>
                                </image>
                                <image>
                                    <name>keycloak-vc-issuer</name>
                                    <build>
                                        <dockerFile>${project.build.directory}/docker-build/Dockerfile-init</dockerFile>
                                        <args>
                                            <PLUGIN_VERSION>${project.version}</PLUGIN_VERSION>
                                            <JAR_DIR>maven/</JAR_DIR>
                                        </args>
                                    </build>
                                </image>
                            </images>
                        </configuration>
                    </plugin>

                    <!-- run tests -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <skip>true</skip>
                            <failIfNoTests>false</failIfNoTests>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>io.kokuwa.maven</groupId>
                        <artifactId>k3s-maven-plugin</artifactId>
                        <version>${version.io.kokuwa.maven.k3s-plugin}</version>
                        <executions>
                            <execution>
                                <id>prepare-test-cluster</id>
                                <goals>
                                    <goal>create</goal>
                                    <goal>start</goal>
                                    <goal>image</goal>
                                    <goal>kubectl</goal>
                                </goals>
                                <configuration>
                                    <dockerImages>
                                        <dockerImage>keycloak</dockerImage>
                                        <dockerImage>keycloak-vc-issuer</dockerImage>
                                    </dockerImages>
                                    <streamLogs>true</streamLogs>
                                    <portBindings>
                                        <portBinding>8080:8080</portBinding>
                                        <portBinding>7000:7000</portBinding>
                                        <portBinding>7001:7001</portBinding>
                                        <portBinding>7003:7003</portBinding>
                                    </portBindings>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
